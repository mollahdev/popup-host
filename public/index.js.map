{"version":3,"file":"index.js","mappings":"mBA2CA,MAAMA,EAAgB,IAlCtB,cCTe,MAEXC,SAAW,CACPC,KAAMC,KAAKC,aAAaC,KAAKF,OAGjCC,aAAcE,GACVH,KAAKF,SAASK,OAASA,EACvBH,KAAKD,OAGTK,cAMI,MAAMC,EAAOL,KACbM,MAAM,qEACLC,MAAMC,GAAYA,EAASC,SAC3BF,MAAMC,IAEH,MAAME,EAAO,CACTC,KAAMH,GAGVF,MAAM,oEACLC,MAAMC,GAAYA,EAASC,SAC3BF,MAAMC,IACHE,EAAKE,IAAMJ,EACXH,EAAKP,SAASY,KAAOA,EACrBG,OAAOC,cAAe,IAAIC,YAAY,uBDpBlDhB,OACI,MAAMI,EAASH,KAAKF,SAASK,OACvBO,EAAOV,KAAKF,SAASY,KAE3BM,YAAW,KAEPH,OAAOI,SAASC,KAAKC,UAAUC,IAAI,cACnCH,SAASI,KAAKC,mBAAmB,YAAa,UAAUZ,EAAKE,eAC7DK,SAASC,KAAKI,mBAAmB,YAAaZ,EAAKC,MAEnD,MAAMY,EAAWN,SAASO,cAAc,uBACpCD,GACAA,EAASE,iBAAiB,SAAS,KAC/BZ,OAAOI,SAASC,KAAKC,UAAUO,OAAO,iBAI9C,MAAMC,EAAYV,SAASO,cAAc,eACnCI,EAAaX,SAASO,cAAc,gBACtCG,GAAcC,GACdD,EAAUF,iBAAiB,SAAS,KAChC,MAAMI,EAAQD,EAAWC,MACzBC,MAAMD,QAIf1B,EAAO4B,cAOlBlB,OAAOmB,MAASnC,EAAcC,U","sources":["webpack://popup-host/./src/popup.js","webpack://popup-host/./src/inc/popup-base.js"],"sourcesContent":["/**\r\n * \r\n * \r\n * file: popup.js\r\n * @description this file is responsible for managing popup on client site\r\n * \r\n */ \r\n\r\nimport PopupBase from \"./inc/popup-base\";\r\nclass Popup extends PopupBase{\r\n    \r\n    init() {\r\n        const config = this.settings.config;\r\n        const data = this.settings.data;\r\n        \r\n        setTimeout(()=>{\r\n\r\n            window.document.body.classList.add('show-popup');\r\n            document.head.insertAdjacentHTML(\"beforeend\", `<style>${data.css}</style>`)\r\n            document.body.insertAdjacentHTML(\"beforeend\", data.html)\r\n\r\n            const closeBtn = document.querySelector('.popup-close-button')\r\n            if( closeBtn ) {\r\n                closeBtn.addEventListener('click', () => {\r\n                    window.document.body.classList.remove('show-popup');\r\n                })\r\n            }\r\n\r\n            const submitBtn = document.querySelector('.submit-btn');\r\n            const emailField = document.querySelector('.email-field');\r\n            if( submitBtn &&  emailField ) {\r\n                submitBtn.addEventListener('click', () => {\r\n                    const value = emailField.value\r\n                    alert(value)\r\n                })\r\n            }\r\n\r\n        }, config.setTimeOut)\r\n\r\n    }\r\n}\r\n\r\n\r\nconst popupInstance = new Popup();\r\nwindow.popup =  popupInstance.settings;","export default class PopupBase {\r\n    \r\n    settings = {\r\n        init: this.frontendInit.bind(this)\r\n    };\r\n\r\n    frontendInit( config ) {\r\n        this.settings.config = config;\r\n        this.init();\r\n    }\r\n\r\n    constructor() {\r\n        /**\r\n         * \r\n         * Trigger the frontend event when the dom is fully loaded \r\n         * \r\n         */ \r\n        const self = this;\r\n        fetch('https://bookerkit.com/popup-host/' + 'storage/read.php?file=markup.txt')\r\n        .then( response => response.text())\r\n        .then( response => {\r\n\r\n            const data = {\r\n                html: response\r\n            }\r\n\r\n            fetch('https://bookerkit.com/popup-host/' + 'storage/read.php?file=style.txt')\r\n            .then( response => response.text())\r\n            .then( response => {\r\n                data.css = response;\r\n                self.settings.data = data;\r\n                window.dispatchEvent( new CustomEvent('popup/init') );\r\n            })\r\n        })\r\n \r\n    }\r\n}"],"names":["popupInstance","settings","init","this","frontendInit","bind","config","constructor","self","fetch","then","response","text","data","html","css","window","dispatchEvent","CustomEvent","setTimeout","document","body","classList","add","head","insertAdjacentHTML","closeBtn","querySelector","addEventListener","remove","submitBtn","emailField","value","alert","setTimeOut","popup"],"sourceRoot":""}