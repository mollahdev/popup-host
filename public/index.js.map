{"version":3,"file":"index.js","mappings":"mBAmBA,MAAMA,EAAgB,IAVtB,cCTe,MAEXC,SAAW,CACPC,KAAMC,KAAKC,aAAaC,KAAKF,OAGjCC,aAAcE,GACVH,KAAKF,SAASK,OAASA,EACvBH,KAAKD,OAGTK,cAMIC,OAAOC,OAAS,KACZD,OAAOE,cAAe,IAAIC,YAAY,kBDP9CT,OAEIU,QAAQC,IAAIV,KAAKF,SAASK,UAOlCE,OAAOM,MAASd,EAAcC,U","sources":["webpack://popup-host/./src/popup.js","webpack://popup-host/./src/inc/popup-base.js"],"sourcesContent":["/**\r\n * \r\n * \r\n * file: popup.js\r\n * @description this file is responsible for managing popup on client site\r\n * \r\n */ \r\n\r\nimport PopupBase from \"./inc/popup-base\";\r\nclass Popup extends PopupBase{\r\n \r\n    init() {\r\n        \r\n        console.log(this.settings.config)\r\n\r\n    }\r\n}\r\n\r\n\r\nconst popupInstance = new Popup();\r\nwindow.popup =  popupInstance.settings;","export default class PopupBase {\r\n    \r\n    settings = {\r\n        init: this.frontendInit.bind(this)\r\n    };\r\n\r\n    frontendInit( config ) {\r\n        this.settings.config = config;\r\n        this.init();\r\n    }\r\n\r\n    constructor() {\r\n        /**\r\n         * \r\n         * Trigger the frontend event when the dom is fully loaded \r\n         * \r\n         */ \r\n        window.onload = () => {\r\n            window.dispatchEvent( new CustomEvent('popup/init') );\r\n        }\r\n    }\r\n}"],"names":["popupInstance","settings","init","this","frontendInit","bind","config","constructor","window","onload","dispatchEvent","CustomEvent","console","log","popup"],"sourceRoot":""}