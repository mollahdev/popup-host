(()=>{"use strict";class e{config={};css="";constructor(){const e=this;this.registerControls.apply({addControl:function(t,n){n.selector&&(n.prefix="#popup ",e.css+=n.prefix+n.selector.call(n)+"\n\n"),n.isLabelInline=n.isLabelInline||!1,e.config[t]=n}})}static text(e,t){return`<input \n                value="${e.default}" \n                data-key=${t} \n                type="text" \n                class="popup-control--trigger"\n            />`}static color(e,t){return`<input \n                value="${e.default}" \n                data-key=${t} \n                type="color" \n                class="popup-control--trigger"\n            />`}static slider(e,t){return`<div class="slider-control">\n                <input\n                    class="popup-control--trigger"\n                    data-key=${t}\n                    type="range"\n                    min="0"  \n                    max=${e.max}  \n                    step=${e.step} \n                    value=${e.default}               \n                >\n                <span class="value">${e.default}px</span>\n            </div>\n            `}}class t extends e{constructor(){return super(),{controls:this.config,css:this.css,sheet:"popup-stylesheet"}}registerControls(){this.addControl("global_popup_bg",{label:"Popup Background Color",type:"color",default:"#e07a5f",isLabelInline:!0,selector:function(){return` .wrapper{\n                    background-color: ${this.default};\n                    box-shadow: 0px 0px 0 var(--border-width) ${this.default};\n                }`}}),this.addControl("global_popup_border_color",{label:"Popup Border Color",type:"color",default:"#ffffff",isLabelInline:!0,selector:function(){return` .wrapper{\n                    border-color: ${this.default};\n                    border-style: solid;\n                }`}}),this.addControl("global_popup_border_width",{label:"Popup Border Width",type:"slider",default:5,max:50,step:1,selector:function(){return` .wrapper{\n                    border-width: ${this.default}px;\n                    --border-width: ${this.default}px;\n                }`}}),this.addControl("global_popup_radius",{label:"Popup Radius",type:"slider",default:500,max:500,step:10,selector:function(){return` .wrapper{\n                    border-radius: ${this.default}px\n                }`}}),this.addControl("global_popup_width",{label:"Popup Width",type:"slider",default:400,max:1e3,step:10,selector:function(){return` .wrapper{\n                    width: ${this.default}px\n                }`}}),this.addControl("global_popup_height",{label:"Popup Height",type:"slider",default:400,max:1e3,step:10,selector:function(){return` .wrapper{\n                    height: ${this.default}px\n                }`}})}}new class extends class{sidebarSettings={wheelSpeed:2,wheelPropagation:!0,minScrollbarLength:20};sidebarInit(){const e=new PerfectScrollbar(".customizer__sidebar--content",this.sidebarSettings);this.sidebarSettings.ps=e}createControlMarkup(t,n){const{controls:l}=t,s=Object.keys(l).map((t=>{const n=l[t],s=e[n.type];return s?`\n                <div class="control-item" data-inline="${n.isLabelInline}">\n                    <label> ${n.label} </label>\n                    <div class="control-item--field field-type-${n.type}">\n                        ${s(n,t)}\n                    </div>\n                </div>\n            `:""}));jQuery(".sidebar-container").html(`\n            <div class="control-container">\n                ${s.join("")}\n            </div>\n        `),jQuery(".sidebar-container").on("input",".popup-control--trigger",(function(){const e=this.value,t=this.dataset.key;let s="";l[t].default=e,Object.values(l).forEach((e=>{e.selector&&(s+=e.prefix+e.selector.call(e)+"\n\n")})),l[t].selector&&jQuery(`#${n}`).text(s),"range"===this.type&&(this.nextElementSibling.innerText=e+"px")}))}createWidgetMarkup(){jQuery(".sidebar-container").html('\n            <div class="widget-container">\n                \n            <div class="popup-element">\n                <div class="popup-widget" draggable="true">\n                    <i class="popup-widgets"></i>\n                    <label>Text</label>\n                </div>\n            </div>\n            <div class="popup-element">\n                <div class="popup-widget" draggable="true">\n                    <i class="popup-widgets"></i>\n                    <label>Text</label>\n                </div>\n            </div>\n            <div class="popup-element">\n                <div class="popup-widget" draggable="true">\n                    <i class="popup-widgets"></i>\n                    <label>Text</label>\n                </div>\n            </div>\n        \n            </div>\n        ')}}{constructor(){super(),window.addEventListener("DOMContentLoaded",this.init.bind(this))}createControls(e){this.createControlMarkup(this.globalControls,e)}createWidget(){this.createWidgetMarkup()}generateStyleSheet(){jQuery("head").append('<style id="global-settings">'+this.globalControls.css+"</style>")}init(){const e=this;e.globalControls=new t,e.sidebarInit(),e.createWidget(),e.generateStyleSheet(),jQuery(document).on("click",".page-settings, .all-widget",(function(){const t=this.dataset.type;switch(t){case"global-settings":e.createControls.call(e,t);break;case"all-widgets":e.createWidget.call(e,t)}e.sidebarSettings.ps.update()}))}}})();
//# sourceMappingURL=index.js.map